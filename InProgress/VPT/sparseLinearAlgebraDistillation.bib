@inproceedings{wadler-deforestation,
  author    = {Philip Wadler},
  editor    = {Harald Ganzinger},
  title     = {Deforestation: Transforming Programs to Eliminate Trees},
  booktitle = {{ESOP} '88, 2nd European Symposium on Programming, Nancy, France,
               March 21-24, 1988, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {300},
  pages     = {344--358},
  publisher = {Springer},
  year      = {1988},
  doi       = {10.1007/3-540-19027-9\_23},
  timestamp = {Tue, 14 May 2019 10:00:41 +0200},
  biburl    = {https://dblp.org/rec/conf/esop/Wadler88.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{wadler-deforestation-ho,
  author    = {Simon Marlow and
               Philip Wadler},
  editor    = {John Launchbury and
               Patrick M. Sansom},
  title     = {Deforestation for Higher-Order Functions},
  booktitle = {Functional Programming, Glasgow 1992, Proceedings of the 1992 Glasgow
               Workshop on Functional Programming, Ayr, Scotland, UK, 6-8 July 1992},
  series    = {Workshops in Computing},
  pages     = {154--165},
  publisher = {Springer},
  year      = {1992},
  doi       = {10.1007/978-1-4471-3215-8\_14},
  timestamp = {Fri, 21 Jun 2019 13:08:59 +0200},
  biburl    = {https://dblp.org/rec/conf/fp/MarlowW92.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{graphblast,
  author    = {Carl Yang and
               Aydin Bulu{\c{c}} and
               John D. Owens},
  title     = {GraphBLAST: {A} High-Performance Linear Algebra-based Graph Framework
               on the {GPU}},
  journal   = {CoRR},
  volume    = {abs/1908.01407},
  year      = {2019},
  eprinttype = {arXiv},
  eprint    = {1908.01407},
  timestamp = {Fri, 09 Aug 2019 12:15:56 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1908-01407.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{fusion-boosting-memory-computations,
  author    = {Zhen Zheng and
               Pengzhan Zhao and
               Guoping Long and
               Feiwen Zhu and
               Kai Zhu and
               Wenyi Zhao and
               Lansong Diao and
               Jun Yang and
               Wei Lin},
  title     = {FusionStitching: Boosting Memory Intensive Computations for Deep Learning
               Workloads},
  journal   = {CoRR},
  volume    = {abs/2009.10924},
  year      = {2020},
  eprinttype = {arXiv},
  eprint    = {2009.10924},
  timestamp = {Thu, 21 Oct 2021 07:17:23 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-2009-10924.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@misc{XLA,
  author = {Chris Leary, Todd Wang},
  title = {{XLA: TensorFlow, compiled}},
  howpublished = "\url{https://developers.googleblog.com/2017/03/xla-tensorflow-compiled.html}",
  year = {2017}
}

@INPROCEEDINGS{qtree,  author={I. {Simecek}},  booktitle={2009 11th International Symposium on Symbolic and Numeric Algorithms for Scientific Computing},   title={Sparse Matrix Computations Using the Quadtree Storage Format},   year={2009},  volume={},  number={},  pages={168-173},  doi={10.1109/SYNASC.2009.55}}

@article{Kepner2017,
   title={Enabling massive deep neural networks with the GraphBLAS},
   ISBN={9781538634721},
   DOI={10.1109/hpec.2017.8091098},
   journal={2017 IEEE High Performance Extreme Computing Conference (HPEC)},
   publisher={IEEE},
   author={Kepner, Jeremy and Kumar, Manoj and Moreira, Jose and Pattnaik, Pratap and Serrano, Mauricio and Tufo, Henry},
   year={2017},
   month={Sep}
}

@inproceedings{DBLP:conf/sc/SelvitopiEGPAB20,
  author    = {Oguz Selvitopi and
               Saliya Ekanayake and
               Giulia Guidi and
               Georgios A. Pavlopoulos and
               Ariful Azad and
               Aydin Bulu{\c{c}}},
  editor    = {Christine Cuicchi and
               Irene Qualters and
               William T. Kramer},
  title     = {Distributed many-to-many protein sequence alignment using sparse matrices},
  booktitle = {Proceedings of the International Conference for High Performance Computing,
               Networking, Storage and Analysis, {SC} 2020, Virtual Event / Atlanta,
               Georgia, USA, November 9-19, 2020},
  pages     = {75},
  publisher = {{IEEE/ACM}},
  year      = {2020},
  doi       = {10.1109/SC41405.2020.00079},
  timestamp = {Fri, 09 Apr 2021 18:43:14 +0200},
  biburl    = {https://dblp.org/rec/conf/sc/SelvitopiEGPAB20.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Edwards2019FHWP,
  title={FHW Project : High-Level Hardware Synthesis from Haskell Programs},
  author={S. Edwards and Martha A. Kim and Richard Townsend and Kuangya Zhai and L. Lairmore},
  year={2019}
}

@article{naylorRunciman2012, title={The Reduceron reconfigured and re-evaluated}, volume={22}, DOI={10.1017/S0956796812000214}, number={4-5}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, 
author={Naylor, Matthew and Runciman, Colin}, year={2012}, pages={574–613}}

@article{buluc2017graphblas,
  title={The GraphBLAS C API Specification},
  author={Buluc, Aydin and Mattson, Timothy and McMillan, Scott and Moreira, Jose and Yang, Carl},
  journal={GraphBLAS. org, Tech. Rep.},
  year={2017}
}

@misc{hamilton2021700,
      title={The Next 700 Program Transformers}, 
      author={Geoffrey Hamilton},
      year={2021},
      eprint={2108.11347},
      archivePrefix={arXiv},
      primaryClass={cs.PL}
}

@article{GRIN,
author = {Podlovics, Peter and Hruska, Csaba and Pénzes, Andor},
year = {2021},
month = {02},
pages = {},
title = {A Modern Look at GRIN, an Optimizing Functional Language Back End},
journal = {Acta Cybernetica},
doi = {10.14232/actacyb.282969}
}

@article{Matrices,
author = {Davis, Timothy A. and Hu, Yifan},
title = {The University of Florida Sparse Matrix Collection},
year = {2011},
issue_date = {November 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {38},
number = {1},
issn = {0098-3500},
doi = {10.1145/2049662.2049663},
abstract = {We describe the University of Florida Sparse Matrix Collection, a large and actively growing set of sparse matrices that arise in real applications. The Collection is widely used by the numerical linear algebra community for the development and performance evaluation of sparse matrix algorithms. It allows for robust and repeatable experiments: robust because performance results with artificially generated matrices can be misleading, and repeatable because matrices are curated and made publicly available in many formats. Its matrices cover a wide spectrum of domains, include those arising from problems with underlying 2D or 3D geometry (as structural engineering, computational fluid dynamics, model reduction, electromagnetics, semiconductor devices, thermodynamics, materials, acoustics, computer graphics/vision, robotics/kinematics, and other discretizations) and those that typically do not have such geometry (optimization, circuit simulation, economic and financial modeling, theoretical and quantum chemistry, chemical process simulation, mathematics and statistics, power networks, and other networks and graphs). We provide software for accessing and managing the Collection, from MATLAB™, Mathematica™, Fortran, and C, as well as an online search capability. Graph visualization of the matrices is provided, and a new multilevel coarsening scheme is proposed to facilitate this task.},
journal = {ACM Trans. Math. Softw.},
month = {dec},
articleno = {1},
numpages = {25},
keywords = {Graph drawing, multilevel algorithms, performance evaluation, sparse matrices}
}

@article{Futhark,
author = {Henriksen, Troels and Serup, Niels G. W. and Elsman, Martin and Henglein, Fritz and Oancea, Cosmin E.},
title = {Futhark: Purely Functional GPU-Programming with Nested Parallelism and in-Place Array Updates},
year = {2017},
issue_date = {June 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {6},
issn = {0362-1340},
doi = {10.1145/3140587.3062354},
abstract = { Futhark is a purely functional data-parallel array language that offers a machine-neutral programming model and an optimising compiler that generates OpenCL code for GPUs.  This paper presents the design and implementation of three key features of Futhark that seek a suitable middle ground with imperative approaches.  First, in order to express efficient code inside the parallel constructs, we introduce a simple type system for in-place updates that ensures referential transparency and supports equational reasoning.  Second, we furnish Futhark with parallel operators capable of expressing efficient strength-reduced code, along with their fusion rules.  Third, we present a flattening transformation aimed at enhancing the degree of parallelism that (i) builds on loop interchange and distribution but uses higher-order reasoning rather than array-dependence analysis, and (ii) still allows further locality-of-reference optimisations. Finally, an evaluation on 16 benchmarks demonstrates the impact of the language and compiler features and shows application-level performance competitive with hand-written GPU code. },
journal = {SIGPLAN Not.},
month = jun,
pages = {556–571},
numpages = {16},
keywords = {parallel, functional language, compilers, GPGPU}
}

@article{StreamFus,
  author    = {Oleg Kiselyov and
               Aggelos Biboudis and
               Nick Palladinos and
               Yannis Smaragdakis},
  title     = {Stream Fusion, to Completeness},
  journal   = {CoRR},
  volume    = {abs/1612.06668},
  year      = {2016},
  eprinttype = {arXiv},
  eprint    = {1612.06668},
  timestamp = {Mon, 13 Aug 2018 16:47:03 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/KiselyovBPS16.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Zhang2020SpArchEA,
  title={SpArch: Efficient Architecture for Sparse Matrix Multiplication},
  author={Zhekai Zhang and Hanrui Wang and Song Han and William J. Dally},
  journal={2020 IEEE International Symposium on High Performance Computer Architecture (HPCA)},
  year={2020},
  pages={261-274}
}

@INPROCEEDINGS{7761635,  author={Song, William S. and Gleyzer, Vitaliy and Lomakin, Alexei and Kepner, Jeremy},  booktitle={2016 IEEE High Performance Extreme Computing Conference (HPEC)},   title={Novel graph processor architecture, prototype system, and results},   year={2016},  volume={},  number={},  pages={1-7},  doi={10.1109/HPEC.2016.7761635}}

@InProceedings{10.1007/978-3-662-48096-0-52,
author="Aliaga, Jos{\'e} I.
and P{\'e}rez, Joaqu{\'i}n
and Quintana-Ort{\'i}, Enrique S.",
editor="Tr{\"a}ff, Jesper Larsson
and Hunold, Sascha
and Versaci, Francesco",
title="Systematic Fusion of CUDA Kernels for Iterative Sparse Linear System Solvers",
booktitle="Euro-Par 2015: Parallel Processing",
year="2015",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="675--686",
abstract="We introduce a systematic analysis in order to fuse CUDA kernels arising in efficient iterative methods for the solution of sparse linear systems. Our procedure characterizes the input and output vectors of these methods, combining this information together with a dependency analysis, in order to decide which kernels to merge. The experiments on a recent NVIDIA ``Kepler'' GPU report significant gains, especially in energy consumption, for the fused implementations derived from the application of the methodology to three of the most popular Krylov subspace solvers with/without preconditioning.",
isbn="978-3-662-48096-0"
}

@inproceedings{HidayetogluPMEX20,
  title = {At-Scale Sparse Deep Neural Network Inference With Efficient GPU Implementation},
  author = {Mert Hidayetoglu and Carl Pearson and Vikram Sharma Mailthody and Eiman Ebrahimi and Jinjun Xiong and Rakesh Nagi and Wen-mei Hwu},
  year = {2020},
  doi = {10.1109/HPEC43674.2020.9286206},
  researchr = {https://researchr.org/publication/HidayetogluPMEX20},
  cites = {0},
  citedby = {0},
  pages = {1-7},
  booktitle = {2020 IEEE High Performance Extreme Computing Conference, HPEC 2020, Waltham, MA, USA, September 22-24, 2020},
  publisher = {IEEE},
  isbn = {978-1-7281-9219-2},
}

@article{GraphColoringGpuFusion,
author = {Chen, Xuhao and Li, Pingfan and Fang, Jianbin and Tang, Tao and Wang, Zhiying and Yang, Canqun},
title = {Efficient and high-quality sparse graph coloring on GPUs},
journal = {Concurrency and Computation: Practice and Experience},
volume = {29},
number = {10},
pages = {e4064},
keywords = {GPU, graph coloring, speculative greedy},
doi = {https://doi.org/10.1002/cpe.4064},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.4064},
note = {e4064 cpe.4064},
abstract = {Summary Graph coloring has been broadly used to discover concurrency in parallel computing. To speed up graph coloring for large-scale datasets, parallel algorithms have been proposed to leverage modern GPUs. Existing GPU implementations either have limited performance or yield unsatisfactory coloring quality (too many colors assigned). We present a work-efficient parallel graph coloring implementation on GPUs with good coloring quality. Our approach uses the speculative greedy scheme, which inherently yields better quality than the method of finding maximal independent set. To achieve high performance on GPUs, we refine the algorithm to leverage efficient operators and alleviate conflicts. We also incorporate common optimization techniques to further improve performance. Our method is evaluated with both synthetic and real-world sparse graphs on the NVIDIA GPU. Experimental results show that our proposed implementation achieves averaged 4.1 ×  (up to 8.9 × ) speedup over the serial implementation. It also outperforms the existing GPU implementation from the NVIDIA CUSPARSE library (2.2 ×  average speedup), while yielding much better coloring quality than CUSPARSE.},
year = {2017}
}
