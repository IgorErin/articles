== 1 =============
== 2 =============
== 3 =============

== 4 =============

We have a cycle: "Ou, there is no interesting applications for CFPQ, so there is no reason to develop new better algorithms for it". And at the same time: "Oh... There are no solutions for CFPQ performant enough, so there is no reason to reduce my problem to CFPQ."


== 5 =============

And we are working on breaking this circle. 

First of all, we developed and published a set of linear algebra based CFPQ algorithms. These implementations are based on the well-established library for sparse linear algebra.

Next, we provide full-stack support of CFPQ in the RedisGraph database. We extend both query language and query execution engine to provide a user-friendly platform for CFPQ evaluation.

And finally, we are working on dataset collecting. We collected a set of real-world graphs and queries from different areas of CFPQ application, unified these representation formats, and published them.  This step is still in progress: we should add more different graphs and queries, simplify dataset utilization workflow and so on.

== 6 ==============

== 7 ==============
== 8 ==============